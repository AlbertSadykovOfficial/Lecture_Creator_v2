let volk_joke_is_print_now = false;
let volk_array = ['Хах, ты что, реально ВОЛКА в клетку решил загнать? Ну ты ОТЖИГАЕШЬ © Прометей - ОЧИСТИ СРАНИЦУ','Волка В клетку не посадишь © Кант (который философ) - ОЧИСТИ СРАНИЦУ','Волка в клетку посадишь, Окажешься на Мушкете моего Мушкета, © Александр Дюма - ОЧИСТИ СРАНИЦУ','Клетка - место Льва и Тигра, ВОЛК уж точно там не свой © Ярослав Мудрый - ОЧИСТИ СРАНИЦУ','В клеку можешь цифры поместить, но не Волка © Пифагор - ОЧИСТИ СРАНИЦУ','В волке много клеток и другой биологической массы, но в Клетке Волков нету. © Аристотель - ОЧИСТИ СРАНИЦУ']
let output_info = [0,0];    // Массив, хранящий для каждой страницы символ, с которого начинает выводиться текст

let page = 0;               // Номер текущей страницы
let isNext = true;      
let isPrev = false;
let settings_mode = 1;      //  Тип настройки 0-расширенный 1-упрощенный.
let type_of_page = 2;       //  Тип страницы 0-Левый лист, 1 - Правый (нужен для установки параметров в set_arguments())

// Шаблоны отступов по-умолчанию для контейнера вывода (для Левого и Правого листов)
let template_XY=[//1стр     //2стр
                [102,40,    15,40],
                [121,87,    110,120],
                [30,85,     100,105],
                [95,105,     35,95],
                [60,105,     55,95]
                ];

// Настройки вывода контента в canvas по-умолчанию           
//              Поворот       |Отступ + Шрифт|   Ширина/Высота контейнера
let page_set = [[0.2,-0.2,   43,20,    43,20,    560,825, 560, 825],
                [-0.2,-0.5,  37.5,18,  32.5,17,  480,740, 460, 730],
                [0,0,        31,18,    30.25,18, 520,720, 535, 700],
                [0,0,        38.9,18,  38,18,    550,770, 560, 750],
                [-0.3,-0.8,  15,14,    15,14,    550,600, 560, 650]
               ];   

// Массив всех доступных пар шрифтов           
let font_array = [["ver_1_1","ver_1_2"],["ver_2_1","ver_2_2"],["ver_3_1","ver_3_2"],["ver_4_0","ver_4_0"],["ver_5_0","ver_5_0"]];

// Выбранная пара шрифтов     
let selected_font = ["ver_2_1","ver_2_2", 0];

//----------------- Массивы Ошибок-----------//
/*
    Массивы ошибок предназначены для шрифтов, в которых некоторые символы некорректно отображаются.
    Так, например, Шрифты ver_1 и ver_2 были раработаны мною в пробной версии платной программы для
    шрифтов.
    Пробная версия программы накладывает ограничения на символы при сохранении и заменяет некоторые на 
    watermark.
    Зная такие символы, мы вводим их в массив ошибок, и при печати этого символа мы изменяем шрифт на другой, 
    в котором присутствует нужный символ. 
    Понятно, что шрифт замены должен быть схожим с тем, который мы заменяем, поэтому требуется брать если не 
    одинаковый (как в ver_1 и ver_2), то хотя бы похожий как в (ver_3).

    Данная проблема с watermark принесла и весьма положительную составляющую. Так, теперь вариации букв и символов увеличились 
    в 2 раза, что означает - качество БЕСПАЛЕВНОСТИ® возросло и текст больше похож на рукописный.

    Так как мною используется 2 шрифта для вывода, то и массива должно быть 2:
        1) Массив обработки ошибок 1го шрифта
        2) Массив обработок ошибок 2го шрифта
    
    Внутри массива распологаются подмассивы, которые отвечают за ТИП шрифта:
        Для ver_1_1 : mistakes_ver_1[0][symbol]
        Для ver_1_2 : mistakes_ver_2[0][symbol]

        Для ver_2_1 : mistakes_ver_1[1][symbol] 
        и тд...
*/
let mistakes_ver_1= 
[  
  // ver_1_1 
[   'г',
    'о',
    'ч',
    "b",
    "q",
    "s",
    "Г",
    "М",
    "Р",
    "Ъ",
    "Ю",
    "B",
    "L",
    "Q",
    "7",
    ".",
    ";",
    "%",
    "∏",
    ".",
    "/",
    "；",
    "§",
    "’",
    "/",
    "；",
    "^",
    "¬",
    "≈",
    "^"],
  // ver_2_1 
   ['е',
    'р',
    'ф',
    'ь',
    'f',
    't',
    'z',
    'Б',
    'С',
    'Ч',
    'Ь',
    'K',

    '?',
    '-',
    ']',
    '“',
    '<',
    '¬',
    '´',
    '̧', /*тут есть знак*/
    '⁄',
    '∑',
    '­'/*тут есть знак*/
   ], 
 // ver_3_1   
   ['е',
    'р',
    'ф',
    'ь',
    'f',
    't',
    'z',
    'Б',
    'С',
    'Ч',
    'Ь',
    'K',

    '?',
    '-',
    ']',
    '“',
    '<',
    '¬',
    '´',
    '̧', /*тут есть знак*/
    '⁄',
    '∑',
    '­'/*тут есть знак*/
   ],
// ver_4 ver_5 Не нуждаются в переклбчателе (т.к одиночные)
   [],[]
]
let mistakes_ver_2= 
[  
 // ver_1_2   
   ['д',
    'и',
    'с',
    'ш',
    "p",
    "А",
    "П",
    "I",
    "M",
    "R",
    "9",
    "=",
    "'",
    "§",
    "„",
    "°",
    "€"],
  // ver_2_2     
    ['а',
    'г',
    'с',
    'ъ',
    'e',
    'q',
    'r',
    'З',
    'Л',
    'Ъ',
    'C',
    'J',
    'M',
    'R',
    'W',

    '6',
    ')',
    '&',
    "\\",
    '{',
    '«',
    '„',
    '>',
    '¦',
    '∂'
   ],
 // ver_3_2      
   ['д',
    'и',
    'с',
    'ш',
    "p",
    "А",
    "П",
    "I",
    "M",
    "R",
    "9",
    "=",
    "'",
    "§",
    "„",
    "°",
    "€"],
 // ver_4 ver_5 Не нуждаются в переклбчателе (т.к одиночные)
   [],[]
];
